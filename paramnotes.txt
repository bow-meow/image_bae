TEXT
abc_easy as [1..3] [a..c] 123 yaaa
[200..1]
[a..z]
[z..a]
abc[1..100]def
"arararar a<>!"Â£"&$"%*$%("


SIZE

500x500
500
rand(100..500)x500
500xrand(100..500)
rand(100..500)

FONT

comicsans
comicsans, arial, pokemon
rand(comicsans, arial, pokemon)
rand

COLOR

red
#adhas2
(255, 21, 200)
red, green, blue
rand(red, #adhas2, (255, 21, 200))
rand

FORMAT

jpg
.jpg
jpg, png, tif
rand(jpg, png, tif)
rand
tif(layer1, layer2, etc)



test command
rand:
image_bae.exe --text "123123123" --color rand --font rand --format rand
rand multi:
image_bae.exe --text "123123123" --color "rand(red, #adhas2, (255, 21, 200))" --font "rand(pokemon, seseme, arial)" --format "rand(jpg, png, tif)"
multi:
image_bae.exe --text "123123123" --color "red, #adhas2, (255, 21, 200)" --font "pokemon, seseme, arial" --format "jpg, png, tif"
single
image_bae.exe --text "123123123" --color red --font arial --format jpg



Things to do:

size should allow for 500xrand or randxrand or randx500
ability to change size of font
7. add parsing for tif. tif(layer1, layer2) - allow user to use images on their machine, do checks to see if they exists while parsing. Possibly allow default layers (default, default) or resourced layers (goku, etc)
10. better error messages? anyhow, thiserror, look at parseinterror


FIXED 
//9. size parser allows rand(100,200) when it should only allow rand(100..200). Same goes for other values: rand(jpg..png) is allowed.
3. size parsing needs to check if random values are lower than max. Example: rand(1000..100) is invalid
4. color parsing will need validity checks for hex, rgb and name
5. fonts will need checking against current list of fonts.
6. make parsing work for text
get image generation working with params
allow size to be sequenced. example: 500x500,1000x1000. This could be achieved by storing strings as size (numxnum) as putting any random,ranged or static values in
rand for format is not working